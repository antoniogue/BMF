/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ScheduledRequestFrame.java
 *
 * Created on 15-set-2010, 17.47.45
 */
package ie.ucd.clarity.bmf.GUI;

import ie.ucd.clarity.bmf.GUI.common.BMFRequestObjectGUI;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.AbstractListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * @author  Andrea
 */
public class ScheduledRequestFrame extends javax.swing.JFrame implements Observer {

    private ArrayList<BMFRequestObjectGUI> requests;
    /**
	 * @uml.property  name="frame"
	 * @uml.associationEnd  
	 */
    InitialFrame frame;

    /** Creates new form ScheduledRequestFrame */
    public ScheduledRequestFrame() {
    }

    public ScheduledRequestFrame(ArrayList<BMFRequestObjectGUI> requests, InitialFrame frame) {
        this.requests = requests;
        this.frame = frame;
        initComponents();
        this.detailRequestPanel1.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestList = new javax.swing.JList();
        rescheduleButton = new javax.swing.JButton();
        unscheduleButton = new javax.swing.JButton();
        detailRequestPanel1 = new ie.ucd.clarity.bmf.GUI.DetailRequestPanel();

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        jMenuItem1.setText("Show Chart");
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REQUESTS");
        getContentPane().setLayout(new java.awt.GridLayout(1, 2));

        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        requestList.setModel(new RequestsListModel());
        requestList.setComponentPopupMenu(jPopupMenu1);
        requestList.setName("requestList"); // NOI18N
        requestList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(requestList);

        rescheduleButton.setText("Reschedule Request");
        rescheduleButton.setName("rescheduleButton"); // NOI18N
        rescheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rescheduleButtonActionPerformed(evt);
            }
        });

        unscheduleButton.setText("Unschedule Request");
        unscheduleButton.setName("unscheduleButton"); // NOI18N
        unscheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unscheduleButtonActionPerformed(evt);
            }
        });

        detailRequestPanel1.setName("detailRequestPanel1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(unscheduleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rescheduleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailRequestPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(detailRequestPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rescheduleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unscheduleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void requestListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestListMouseClicked
        BMFRequestObjectGUI req = (BMFRequestObjectGUI) requestList.getSelectedValue();
        if (!evt.isPopupTrigger()) {
            detailRequestPanel1.setParameterAndShow(req);
            rescheduleButton.setEnabled(!req.isActive());
            unscheduleButton.setEnabled(req.isActive());
        } else {
            System.out.println(req.getName() + " ...............................");
        }
    }//GEN-LAST:event_requestListMouseClicked

    private void rescheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rescheduleButtonActionPerformed
        BMFRequestObjectGUI req = null;
        if (requestList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "No Request Selected!");
            return;
        } else {
            req = (BMFRequestObjectGUI) requestList.getSelectedValue();
            if (req.isActive()) {
                JOptionPane.showMessageDialog(this, "Request already Active!");
                return;
            }
        }
        frame.rescheduleRequest(req);
    }//GEN-LAST:event_rescheduleButtonActionPerformed

    private void unscheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unscheduleButtonActionPerformed
        BMFRequestObjectGUI req = null;
        if (requestList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "No Request Selected!");
            return;
        } else {
            req = (BMFRequestObjectGUI) requestList.getSelectedValue();
            if (!req.isActive()) {
                JOptionPane.showMessageDialog(this, "Request Not Active!");
                return;
            }
        }
        frame.unscheduleRequest(req);
    }//GEN-LAST:event_unscheduleButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        BMFRequestObjectGUI req = (BMFRequestObjectGUI) requestList.getSelectedValue();
        if (!req.isActive()) {
            JFrame f = new JFrame(req.getName());
            f.setSize(new Dimension(700, 500));
            f.setLocation((Toolkit.getDefaultToolkit().getScreenSize().width - frame.getWidth()) / 2, (Toolkit.getDefaultToolkit().getScreenSize().height - frame.getHeight()) / 2);
            f.add(req.getCharts().getComponent());
            f.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Request " + req.getName() + " Running!");
        }



    }//GEN-LAST:event_jMenuItem1ActionPerformed

    class RequestsListModel extends AbstractListModel {

        public int getSize() {
            return requests.size();
        }

        public Object getElementAt(int index) {
            return requests.get(index);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
	 * @uml.property  name="detailRequestPanel1"
	 * @uml.associationEnd  
	 */
    private ie.ucd.clarity.bmf.GUI.DetailRequestPanel detailRequestPanel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList requestList;
    private javax.swing.JButton rescheduleButton;
    private javax.swing.JButton unscheduleButton;
    // End of variables declaration//GEN-END:variables

    public void update(Observable arg0, Object arg1) {
        // TODO Auto-generated method stub
        this.repaint();
    }

    public void showGUI(ArrayList<BMFRequestObjectGUI> requests2) {
        this.requests = requests2;
        this.requestList.setModel(new RequestsListModel());
        this.setVisible(true);
    }

    public void updateRequests(ArrayList<BMFRequestObjectGUI> requests2) {
        this.requests = requests2;
        this.requestList.setModel(new RequestsListModel());
    }
}
