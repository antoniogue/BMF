/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DetailRequestPanel.java
 *
 * Created on 3-dic-2010, 13.48.29
 */

package ie.ucd.clarity.bmf.GUI;

import ie.ucd.clarity.bmf.GUI.common.BMFRequestObjectGUI;
import ie.ucd.clarity.bmf.common.CodeConversion;

/**
 * @author  Andrea
 */
public class DetailRequestPanel extends javax.swing.JPanel {

    /**
	 * @uml.property  name="request"
	 * @uml.associationEnd  
	 */
    BMFRequestObjectGUI request;
    /** Creates new form DetailRequestPanel */
    public DetailRequestPanel() {
        initComponents();
    }

    public DetailRequestPanel(BMFRequestObjectGUI request) {
        this.request = request;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        nameLabelValue = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        idLabelValue = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        typeLabelValue = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        periodTimeScaleLabel = new javax.swing.JLabel();
        periodTimeScaleLabelValue = new javax.swing.JLabel();
        periodValueLabel = new javax.swing.JLabel();
        periodValueLabelValue = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lifeTimeTimeScaleLabel = new javax.swing.JLabel();
        lifeTimeTimeScaleLabelValue = new javax.swing.JLabel();
        lifeTimeValueLabel = new javax.swing.JLabel();
        lifeTimeValueLabelValue = new javax.swing.JLabel();
        actionLabel = new javax.swing.JLabel();
        actionLabelValue = new javax.swing.JLabel();
        sensorLabel = new javax.swing.JLabel();
        sensorLabelValue = new javax.swing.JLabel();
        actuatorParamsLabel = new javax.swing.JLabel();
        actuatorParamsLabelValue = new javax.swing.JLabel();
        dataTypeLabel = new javax.swing.JLabel();
        syntheticDataLabel = new javax.swing.JLabel();
        dataTypeLabelValue = new javax.swing.JLabel();
        thresholdLabel = new javax.swing.JLabel();
        thresholdLabelValue = new javax.swing.JLabel();
        sensorIfExceededLabel = new javax.swing.JLabel();
        syntheticDataLabelValue = new javax.swing.JLabel();
        sensorIfExceededLabelValue = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Request Details"));

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nameLabel.setText("Name:");
        nameLabel.setName("nameLabel"); // NOI18N

        nameLabelValue.setText("jLabel2");
        nameLabelValue.setName("nameLabelValue"); // NOI18N

        idLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idLabel.setText("ID:");
        idLabel.setName("idLabel"); // NOI18N

        idLabelValue.setText("jLabel4");
        idLabelValue.setName("idLabelValue"); // NOI18N

        typeLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        typeLabel.setText("Type:");
        typeLabel.setName("typeLabel"); // NOI18N

        typeLabelValue.setText("jLabel6");
        typeLabelValue.setName("typeLabelValue"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Period"));
        jPanel1.setName("jPanel1"); // NOI18N

        periodTimeScaleLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        periodTimeScaleLabel.setText("Time Scale:");
        periodTimeScaleLabel.setName("periodTimeScaleLabel"); // NOI18N

        periodTimeScaleLabelValue.setText("jLabel8");
        periodTimeScaleLabelValue.setName("periodTimeScaleLabelValue"); // NOI18N

        periodValueLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        periodValueLabel.setText("Value:");
        periodValueLabel.setName("periodValueLabel"); // NOI18N

        periodValueLabelValue.setText("jLabel10");
        periodValueLabelValue.setName("periodValueLabelValue"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(periodTimeScaleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(periodTimeScaleLabelValue)
                .addGap(38, 38, 38)
                .addComponent(periodValueLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(periodValueLabelValue)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(periodTimeScaleLabel)
                    .addComponent(periodTimeScaleLabelValue)
                    .addComponent(periodValueLabel)
                    .addComponent(periodValueLabelValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Life Time"));
        jPanel2.setName("jPanel2"); // NOI18N

        lifeTimeTimeScaleLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lifeTimeTimeScaleLabel.setText("Time Scale:");
        lifeTimeTimeScaleLabel.setName("lifeTimeTimeScaleLabel"); // NOI18N

        lifeTimeTimeScaleLabelValue.setText("jLabel8");
        lifeTimeTimeScaleLabelValue.setName("lifeTimeTimeScaleLabelValue"); // NOI18N

        lifeTimeValueLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lifeTimeValueLabel.setText("Value:");
        lifeTimeValueLabel.setName("lifeTimeValueLabel"); // NOI18N

        lifeTimeValueLabelValue.setText("jLabel10");
        lifeTimeValueLabelValue.setName("lifeTimeValueLabelValue"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lifeTimeTimeScaleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lifeTimeTimeScaleLabelValue)
                .addGap(38, 38, 38)
                .addComponent(lifeTimeValueLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lifeTimeValueLabelValue)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lifeTimeTimeScaleLabel)
                    .addComponent(lifeTimeTimeScaleLabelValue)
                    .addComponent(lifeTimeValueLabel)
                    .addComponent(lifeTimeValueLabelValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        actionLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        actionLabel.setText("Action:");
        actionLabel.setName("actionLabel"); // NOI18N

        actionLabelValue.setText("jLabel16");
        actionLabelValue.setName("actionLabelValue"); // NOI18N

        sensorLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sensorLabel.setText("Sensor:");
        sensorLabel.setName("sensorLabel"); // NOI18N

        sensorLabelValue.setText("jLabel18");
        sensorLabelValue.setName("sensorLabelValue"); // NOI18N

        actuatorParamsLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        actuatorParamsLabel.setText("Actuator Params:");
        actuatorParamsLabel.setName("actuatorParamsLabel"); // NOI18N

        actuatorParamsLabelValue.setText("jLabel20");
        actuatorParamsLabelValue.setName("actuatorParamsLabelValue"); // NOI18N

        dataTypeLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dataTypeLabel.setText("Data Type:");
        dataTypeLabel.setName("dataTypeLabel"); // NOI18N

        syntheticDataLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        syntheticDataLabel.setText("Synthetic Data:");
        syntheticDataLabel.setName("syntheticDataLabel"); // NOI18N

        dataTypeLabelValue.setText("jLabel24");
        dataTypeLabelValue.setName("dataTypeLabelValue"); // NOI18N

        thresholdLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        thresholdLabel.setText("Threshold:");
        thresholdLabel.setName("thresholdLabel"); // NOI18N

        thresholdLabelValue.setText("jLabel26");
        thresholdLabelValue.setName("thresholdLabelValue"); // NOI18N

        sensorIfExceededLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sensorIfExceededLabel.setText("Sensor if Thresholds Exceeded:");
        sensorIfExceededLabel.setName("sensorIfExceededLabel"); // NOI18N

        syntheticDataLabelValue.setText("jLabel22");
        syntheticDataLabelValue.setName("syntheticDataLabelValue"); // NOI18N

        sensorIfExceededLabelValue.setText("jLabel28");
        sensorIfExceededLabelValue.setName("sensorIfExceededLabelValue"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(actionLabel)
                    .addComponent(sensorLabel)
                    .addComponent(dataTypeLabel)
                    .addComponent(nameLabel)
                    .addComponent(idLabel)
                    .addComponent(typeLabel)
                    .addComponent(thresholdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabelValue)
                    .addComponent(idLabelValue)
                    .addComponent(typeLabelValue)
                    .addComponent(actionLabelValue)
                    .addComponent(sensorLabelValue)
                    .addComponent(dataTypeLabelValue)
                    .addComponent(thresholdLabelValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(syntheticDataLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                        .addComponent(syntheticDataLabelValue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actuatorParamsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addComponent(actuatorParamsLabelValue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sensorIfExceededLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(sensorIfExceededLabelValue)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameLabelValue))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idLabel)
                            .addComponent(idLabelValue))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeLabel)
                            .addComponent(typeLabelValue))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(actionLabel)
                            .addComponent(actionLabelValue))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sensorLabel)
                        .addComponent(sensorLabelValue))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(actuatorParamsLabel)
                        .addComponent(actuatorParamsLabelValue)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataTypeLabel)
                    .addComponent(syntheticDataLabel)
                    .addComponent(syntheticDataLabelValue)
                    .addComponent(dataTypeLabelValue))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thresholdLabel)
                    .addComponent(sensorIfExceededLabel)
                    .addComponent(sensorIfExceededLabelValue)
                    .addComponent(thresholdLabelValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actionLabel;
    private javax.swing.JLabel actionLabelValue;
    private javax.swing.JLabel actuatorParamsLabel;
    private javax.swing.JLabel actuatorParamsLabelValue;
    private javax.swing.JLabel dataTypeLabel;
    private javax.swing.JLabel dataTypeLabelValue;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idLabelValue;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lifeTimeTimeScaleLabel;
    private javax.swing.JLabel lifeTimeTimeScaleLabelValue;
    private javax.swing.JLabel lifeTimeValueLabel;
    private javax.swing.JLabel lifeTimeValueLabelValue;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabelValue;
    private javax.swing.JLabel periodTimeScaleLabel;
    private javax.swing.JLabel periodTimeScaleLabelValue;
    private javax.swing.JLabel periodValueLabel;
    private javax.swing.JLabel periodValueLabelValue;
    private javax.swing.JLabel sensorIfExceededLabel;
    private javax.swing.JLabel sensorIfExceededLabelValue;
    private javax.swing.JLabel sensorLabel;
    private javax.swing.JLabel sensorLabelValue;
    private javax.swing.JLabel syntheticDataLabel;
    private javax.swing.JLabel syntheticDataLabelValue;
    private javax.swing.JLabel thresholdLabel;
    private javax.swing.JLabel thresholdLabelValue;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JLabel typeLabelValue;
    // End of variables declaration//GEN-END:variables

    public void setParameterAndShow(BMFRequestObjectGUI req) {
        this.setVisible(true);
        this.request=req;
        this.nameLabelValue.setText(req.getName());
        this.idLabelValue.setText(req.getRequest().getRequestID()+"");
        this.typeLabelValue.setText(CodeConversion.getConfigurationTypeString(req.getRequest().getConfigurationType()));
        this.actionLabelValue.setText(CodeConversion.getActionString(req.getRequest().getAction()));
        this.sensorLabelValue.setText(CodeConversion.getSensorName(req.getRequest().getSensor_actuatorType()));
        this.dataTypeLabelValue.setText(CodeConversion.getDataTypeString(req.getRequest().getDataType()));
        this.thresholdLabelValue.setText(CodeConversion.getThresholdName(req.getRequest().getThresholdNumber()));
        this.periodTimeScaleLabelValue.setText(CodeConversion.getTimeScaleString(req.getRequest().getPeriodTimescale()));
        this.periodValueLabelValue.setText(req.getRequest().getPeriodValue()+"");
        this.lifeTimeTimeScaleLabelValue.setText(CodeConversion.getTimeScaleString(req.getRequest().getLifetimeTimescale()));
        this.lifeTimeValueLabelValue.setText(req.getRequest().getLifetimeValue()+"");
        this.actuatorParamsLabelValue.setText(CodeConversion.getActuatorParamsString(req.getRequest().getActuatorParams()));
        this.syntheticDataLabelValue.setText(CodeConversion.getSyntheticDataString(req.getRequest().getSyntheticData()));
        this.sensorIfExceededLabelValue.setText(CodeConversion.getSensorName(req.getRequest().getSensorIfThreshold()));
    }


}
