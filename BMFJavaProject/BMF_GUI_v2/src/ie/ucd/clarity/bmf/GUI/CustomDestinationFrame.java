/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CustomRequest.java
 *
 * Created on 7-set-2010, 12.32.33
 */
package ie.ucd.clarity.bmf.GUI;

import ie.ucd.clarity.bmf.GUI.common.*;
import ie.ucd.clarity.bmf.GUI.common.formulas.DescendingParser;
import ie.ucd.clarity.bmf.GUI.common.formulas.EvaluationVisitor;
import ie.ucd.clarity.bmf.GUI.common.formulas.Expression;
import ie.ucd.clarity.bmf.GUI.common.formulas.Group;
import ie.ucd.clarity.bmf.GUI.common.formulas.Intersection;
import ie.ucd.clarity.bmf.GUI.common.formulas.Manager;
import ie.ucd.clarity.bmf.GUI.common.formulas.Not;
import ie.ucd.clarity.bmf.GUI.common.formulas.Union;
import ie.ucd.clarity.bmf.GUI.components.ScheduleRequestPanel;
import ie.ucd.clarity.bmf.common.Constants;

import java.util.ArrayList;
import javax.swing.AbstractListModel;
import javax.swing.JOptionPane;
import org.jfree.ui.RefineryUtilities;

/**
 * @author  Andrea
 */
public class CustomDestinationFrame extends javax.swing.JFrame {

    ArrayList<BMFNodeGUI> allnodes;
    ArrayList<BMFGroupGUI> groups;
    ArrayList<BMFNodeGUI> toret;
    /**
	 * @uml.property  name="manager"
	 * @uml.associationEnd  
	 */
    Manager manager;
    /**
	 * @uml.property  name="exp"
	 * @uml.associationEnd  
	 */
    Expression exp;
    /**
	 * @uml.property  name="visitor"
	 * @uml.associationEnd  
	 */
    EvaluationVisitor visitor;
    boolean wait4operator;
    boolean wait4group;
    boolean all;
	boolean undogroup;
	boolean undooperator;
	boolean undonot;
    /**
	 * @uml.property  name="formula"
	 */
    String formula="";
    /**
	 * @uml.property  name="panel"
	 * @uml.associationEnd  
	 */
    ScheduleRequestPanel panel;

    /** Creates new form CustomRequest */
    public CustomDestinationFrame() {
    }

    public CustomDestinationFrame(ArrayList<BMFNodeGUI> allnodes, ArrayList<BMFGroupGUI> groups, ScheduleRequestPanel panel) {
        this.panel=panel;
    	this.allnodes = allnodes;
        this.groups = groups;
        wait4operator = false;
        wait4group = true;
        all = false;
        undogroup = false;
        undonot=false;
        undooperator = false;
        manager = new Manager();
        exp = null;
        visitor = new EvaluationVisitor(this.allnodes);
        initComponents();
        RefineryUtilities.centerFrameOnScreen(this);
        unionButton.setEnabled(wait4operator);
        intersectionButton.setEnabled(wait4operator);
        negationButton.setEnabled(wait4group);
        addgroupButton.setEnabled(wait4group);
        allnodesButton.setEnabled(!all);
        closedbracketButton.setEnabled(true);
        openedbracketButton.setEnabled(true);
        undoButton.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        unionButton = new javax.swing.JButton();
        intersectionButton = new javax.swing.JButton();
        negationButton = new javax.swing.JButton();
        openedbracketButton = new javax.swing.JButton();
        closedbracketButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        groupList = new javax.swing.JList();
        allnodesButton = new javax.swing.JButton();
        addgroupButton = new javax.swing.JButton();
        formulaTextField = new javax.swing.JTextField();
        clearformulaButton = new javax.swing.JButton();
        setdestinationButton = new javax.swing.JButton();
        undoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Operator"));

        unionButton.setFont(new java.awt.Font("Tahoma", 3, 11));
        unionButton.setText("Intersection");
        unionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unionButtonActionPerformed(evt);
            }
        });

        intersectionButton.setFont(new java.awt.Font("Tahoma", 3, 11));
        intersectionButton.setText("Union");
        intersectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intersectionButtonActionPerformed(evt);
            }
        });

        negationButton.setFont(new java.awt.Font("Tahoma", 3, 11));
        negationButton.setText("Negation");
        negationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negationButtonActionPerformed(evt);
            }
        });

        openedbracketButton.setFont(new java.awt.Font("Tahoma", 3, 11));
        openedbracketButton.setText("(");
        openedbracketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openedbracketButtonActionPerformed(evt);
            }
        });

        closedbracketButton.setFont(new java.awt.Font("Tahoma", 3, 11));
        closedbracketButton.setText(")");
        closedbracketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closedbracketButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(openedbracketButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(intersectionButton, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                        .addComponent(negationButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(unionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                    .addComponent(closedbracketButton, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(unionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intersectionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(negationButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openedbracketButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closedbracketButton)
                .addContainerGap())
        );

        groupList.setBorder(javax.swing.BorderFactory.createTitledBorder("Groups"));
        groupList.setModel(new GroupsListModel());
        jScrollPane1.setViewportView(groupList);

        allnodesButton.setText("All nodes");
        allnodesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allnodesButtonActionPerformed(evt);
            }
        });

        addgroupButton.setText("Add Group");
        addgroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addgroupButtonActionPerformed(evt);
            }
        });

        formulaTextField.setEditable(false);

        clearformulaButton.setText("Clear Formula");
        clearformulaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearformulaButtonActionPerformed(evt);
            }
        });

        setdestinationButton.setText("SET DESTINATION");
        setdestinationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setdestinationButtonActionPerformed(evt);
            }
        });

        undoButton.setText("UNDO");
        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formulaTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 25, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(allnodesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addgroupButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(undoButton))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearformulaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                        .addComponent(setdestinationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(addgroupButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(allnodesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(undoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(formulaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setdestinationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearformulaButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unionButtonActionPerformed
        if (wait4operator && !wait4group) {
            Union a = new Union();
            manager.add(a);
            formulaTextField.setText(manager.partial());
            wait4operator = false;
            wait4group = true;
            undooperator = true;
            undonot=false;
            undogroup=false;
            undoButton.setEnabled(true);
            unionButton.setEnabled(wait4operator);
            intersectionButton.setEnabled(wait4operator);
            negationButton.setEnabled(wait4group);
            addgroupButton.setEnabled(wait4group);
            allnodesButton.setEnabled(all);
        } else {
            JOptionPane.showMessageDialog(this, "No union", "Union", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_unionButtonActionPerformed

    private void intersectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intersectionButtonActionPerformed
        if (wait4operator && !wait4group && !all) {
            Intersection i = new Intersection();
            manager.add(i);
            formulaTextField.setText(manager.partial());
            wait4operator = false;
            wait4group = true;
            undooperator = true;
            undonot=false;
            undogroup=false;
            undoButton.setEnabled(true);
            unionButton.setEnabled(wait4operator);
            intersectionButton.setEnabled(wait4operator);
            negationButton.setEnabled(wait4group);
            addgroupButton.setEnabled(wait4group);
            allnodesButton.setEnabled(all);
        } else {
            JOptionPane.showMessageDialog(this, "No Itersection", "Intersection", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_intersectionButtonActionPerformed

    private void negationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negationButtonActionPerformed
        if (wait4group && !all) {
            Not n = new Not();
            manager.add(n);
            formulaTextField.setText(manager.partial());
            unionButton.setEnabled(wait4operator);
            undoButton.setEnabled(true);
            undooperator = false;
            undonot=true;
            undogroup=false;      
            intersectionButton.setEnabled(wait4operator);            
            negationButton.setEnabled(wait4operator);
            addgroupButton.setEnabled(wait4group);
            allnodesButton.setEnabled(all);
        } else {
            JOptionPane.showMessageDialog(this, "No Negation", "Negation", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_negationButtonActionPerformed

    private void openedbracketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openedbracketButtonActionPerformed
        String s = new String("(");
        manager.add(s);
        formulaTextField.setText(formulaTextField.getText() + s);
    }//GEN-LAST:event_openedbracketButtonActionPerformed

    private void closedbracketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closedbracketButtonActionPerformed
        String s = new String(")");
        formulaTextField.setText(formulaTextField.getText() + s);
    }//GEN-LAST:event_closedbracketButtonActionPerformed

    private void addgroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addgroupButtonActionPerformed
        if (!groupList.isSelectionEmpty()) {
            if (!wait4operator && wait4group && !all) {
            	BMFGroupGUI tmp=groups.get(groupList.getSelectedIndex());
                manager.add(new Group(tmp.getID(), tmp.getName(), tmp.getNodes()));                
                formulaTextField.setText(manager.partial());
                wait4operator = true;
                wait4group = false;
                undooperator = false;
                undonot=false;
                undogroup=true;
                unionButton.setEnabled(wait4operator);
                intersectionButton.setEnabled(wait4operator);
                negationButton.setEnabled(wait4group);
                addgroupButton.setEnabled(wait4group);
                allnodesButton.setEnabled(all);
                undoButton.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Operator needed", "Group", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "You need to select a group from list", "Group", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addgroupButtonActionPerformed

    private void allnodesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allnodesButtonActionPerformed
        toret = allnodes;
        formulaTextField.setText("ALL NODES");
        all = true;
        unionButton.setEnabled(false);
        intersectionButton.setEnabled(false);
        negationButton.setEnabled(false);
        addgroupButton.setEnabled(false);
        allnodesButton.setEnabled(false);
        closedbracketButton.setEnabled(false);
        openedbracketButton.setEnabled(false);

    }//GEN-LAST:event_allnodesButtonActionPerformed

    private void clearformulaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearformulaButtonActionPerformed
        wait4operator = false;
        wait4group = true;
        all = false;
        undogroup = false;
        undooperator = false;
        manager = new Manager();
        visitor = new EvaluationVisitor(allnodes);
        toret = null;
        formulaTextField.setText("");
        unionButton.setEnabled(!wait4operator);
        intersectionButton.setEnabled(!wait4operator);
        negationButton.setEnabled(wait4group);
        addgroupButton.setEnabled(wait4group);
        allnodesButton.setEnabled(!all);
        closedbracketButton.setEnabled(true);
        openedbracketButton.setEnabled(true);
        undoButton.setEnabled(false);

    }//GEN-LAST:event_clearformulaButtonActionPerformed

    private void setdestinationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setdestinationButtonActionPerformed
    	if (!wait4operator && wait4group && !all) {
    		JOptionPane.showMessageDialog(this, "Incomplete Expression", "Expression", JOptionPane.INFORMATION_MESSAGE);
        }else {        	
        	result();
            this.dispose();
        }
    }//GEN-LAST:event_setdestinationButtonActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        if (undooperator){
        	wait4operator = true;
            wait4group = false;
            unionButton.setEnabled(wait4operator);
            intersectionButton.setEnabled(wait4operator);
            negationButton.setEnabled(wait4group);
            addgroupButton.setEnabled(wait4group);
            allnodesButton.setEnabled(all);
        }else if(undonot){
        	wait4operator = false;
            wait4group = true;
            unionButton.setEnabled(wait4operator);
            intersectionButton.setEnabled(wait4operator);
            negationButton.setEnabled(wait4group);
            addgroupButton.setEnabled(wait4group);
            allnodesButton.setEnabled(all);
        }else if(undogroup){
        	wait4operator = false;
            wait4group = true;
            unionButton.setEnabled(wait4operator);
            intersectionButton.setEnabled(wait4operator);
            negationButton.setEnabled(undonot);
            addgroupButton.setEnabled(wait4group);
            allnodesButton.setEnabled(all);
        }
        	
        undoButton.setEnabled(false);
        manager.removeLast();
        formulaTextField.setText(manager.partial());
    }//GEN-LAST:event_undoButtonActionPerformed

    private void result() {
    	if(!all){
        exp = new DescendingParser(manager).getResult();
        toret = visitor.valueOf(exp);
        formula=manager.partial();       
        }else {
        	formula="ALL NODES";        	
        }
    	panel.setDestinationText(formula);
    	panel.setSensorsDestination(toret);
    }

    /**
	 * @return
	 * @uml.property  name="formula"
	 */
    public String getFormula(){
    	return formula;
    }
    
    public static void p(ArrayList l) {
        for (int i = 0; i < l.size(); i++) {
            System.out.print(" " + l.get(i) + " ");
        }
        System.out.println();
    }

    public String getExpression() {    	
    	if(!all)
    		return exp.returnValue();
    	else{ 
    		return new String(""+Constants.ADDRESSEE_BROADCAST);
    		}
    }

    public ArrayList<BMFNodeGUI> getDestinationNodes() {
        return toret;
    }

    class GroupsListModel extends AbstractListModel {

        public int getSize() {
            return groups.size();
        }

        public Object getElementAt(int index) {
            return groups.get(index);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addgroupButton;
    private javax.swing.JButton allnodesButton;
    private javax.swing.JButton clearformulaButton;
    private javax.swing.JButton closedbracketButton;
    private javax.swing.JTextField formulaTextField;
    private javax.swing.JList groupList;
    private javax.swing.JButton intersectionButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton negationButton;
    private javax.swing.JButton openedbracketButton;
    private javax.swing.JButton setdestinationButton;
    private javax.swing.JButton undoButton;
    private javax.swing.JButton unionButton;
    // End of variables declaration//GEN-END:variables
}
