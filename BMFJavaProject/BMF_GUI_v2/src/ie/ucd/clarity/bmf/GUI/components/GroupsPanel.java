/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GroupsPanel.java
 *
 * Created on 5-dic-2010, 19.28.19
 */
package ie.ucd.clarity.bmf.GUI.components;

import ie.ucd.clarity.bmf.GUI.DnDTrees.GroupsTree;
import ie.ucd.clarity.bmf.GUI.InitialFrame;
import ie.ucd.clarity.bmf.GUI.common.BMFGroupGUI;
import ie.ucd.clarity.bmf.GUI.common.BMFNodeGUI;
import ie.ucd.clarity.bmf.GUI.components.dnd.DropPanel;
import ie.ucd.clarity.bmf.GUI.notification.NewNodeIn;
import ie.ucd.clarity.bmf.network.manager.nodesAndGroupsManager.TooManyGroupsCreatedException;

import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;

/**
 * @author  Andrea
 */
public class GroupsPanel extends javax.swing.JPanel implements Observer{

    DefaultMutableTreeNode top = new DefaultMutableTreeNode("Groups");
    /**
	 * @uml.property  name="frame"
	 * @uml.associationEnd  
	 */
    InitialFrame frame;

    /** Creates new form GroupsPanel */
    public GroupsPanel() {
        initComponents();
    }

    public GroupsPanel(InitialFrame frame) {
        this.frame = frame;
        initComponents();
        getTree().setFrame(this.frame);
        //createGroups();
        getTree().createDragSource();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new ie.ucd.clarity.bmf.GUI.DnDTrees.GroupsTree(top);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tree.setToolTipText("Drag and Drop Nodes from Nodes Tree");
        tree.setName("tree"); // NOI18N
        jScrollPane1.setViewportView(tree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    /**
	 * @uml.property  name="tree"
	 */
    private javax.swing.JTree tree;
    // End of variables declaration//GEN-END:variables

    public DefaultTreeCellRenderer getTreeRenderer() {
        return (DefaultTreeCellRenderer) tree.getCellRenderer();
    }

    public void addNewGroup(BMFGroupGUI n, boolean isAutomatic) {
        ((GroupsTree) tree).addNewGroup(n, isAutomatic);
    }

    public DropPanel getFloorplan() {
        return frame.getSelectedFloorPlan();
    }

    public NodesPanel getNodesPanel() {
        return frame.getNodesPanel();
    }

    /**
	 * @return
	 * @uml.property  name="tree"
	 */
    public GroupsTree getTree() {
        return (GroupsTree) tree;
    }

    public void createGroups(DefaultMutableTreeNode node) {

        BMFNodeGUI n = (BMFNodeGUI) node.getUserObject();
        BMFGroupGUI node2;
        ArrayList<DefaultMutableTreeNode> groups=new ArrayList<DefaultMutableTreeNode>();
        try {
            for (int i = 0; i < n.getSensors().size(); i++) {
                node2 = new BMFGroupGUI(frame.getConsumer().getiBMFNodesAndGroupsManager().addGroup(n.getSensors().get(i).getName()));
                //DefaultMutableTreeNode group = getTree().addNewGroup(node2, true);
                //getTree().addNodeToGroupAutomatically(node, group);
                DefaultMutableTreeNode g=getTree().addNewGroup(node2, true);
                groups.add(g);           
            }
            getTree().addNodeToGroupsAutomatically(node, groups);
        } catch (TooManyGroupsCreatedException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public void update(Observable o, Object arg) {
        if (arg instanceof NewNodeIn) {
            NewNodeIn newn = (NewNodeIn) arg;
            BMFNodeGUI n = new BMFNodeGUI(newn.getNewNode());            
            DefaultMutableTreeNode newNode = getNodesPanel().getTree().addNewNode(n);
            createGroups(newNode);
        }
    }
}
