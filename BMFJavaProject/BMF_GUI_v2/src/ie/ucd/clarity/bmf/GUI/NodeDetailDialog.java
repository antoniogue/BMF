/*
 * TestFomuleAboutBox.java
 */

package ie.ucd.clarity.bmf.GUI;

import ie.ucd.clarity.bmf.GUI.common.BMFNodeGUI;
//import org.jdesktop.application.Action;

/**
 * @author  Matthew
 */
public class NodeDetailDialog extends javax.swing.JDialog {

    /**
	 * @uml.property  name="node"
	 * @uml.associationEnd  
	 */
    private BMFNodeGUI node;
    private String sensors[];

    public NodeDetailDialog(java.awt.Frame parent) {
        super(parent);
        initComponents();
        getRootPane().setDefaultButton(closeButton);
    }

    public NodeDetailDialog(InitialFrame owner, BMFNodeGUI node) {
        super(owner);
        this.node = node;
        sensors=new String[node.getSensors().size()];
        for(int i=0; i<sensors.length; i++)
            sensors[i]=node.getSensors().get(i).getName();
        initComponents();
        getRootPane().setDefaultButton(closeButton);
    }


  //  @Action
    public void closeAboutBox() {
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();
        javax.swing.JLabel titleLabel = new javax.swing.JLabel();
        javax.swing.JLabel versionLabel = new javax.swing.JLabel();
        javax.swing.JLabel idLabel = new javax.swing.JLabel();
        javax.swing.JLabel vendorLabel = new javax.swing.JLabel();
        javax.swing.JLabel sensorboardnameLabel = new javax.swing.JLabel();
        javax.swing.JLabel homepageLabel = new javax.swing.JLabel();
        javax.swing.JLabel groupsLabel = new javax.swing.JLabel();
        javax.swing.JLabel imageLabel = new javax.swing.JLabel();
        javax.swing.JLabel sensorsLabe = new javax.swing.JLabel();
        javax.swing.JLabel homepageLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel homepageLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel functionsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(node.getName());
        setModal(true);
        setName("aboutBox"); // NOI18N
        setResizable(false);

      //  javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(NodeDetailDialog.class, this);
      // closeButton.setAction(actionMap.get("closeAboutBox")); // NOI18N
        closeButton.setText("Close");
        closeButton.setName("closeButton"); // NOI18N

        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD, titleLabel.getFont().getSize()+8));
        titleLabel.setText(node.getName()+" Details");
        titleLabel.setName("titleLabel"); // NOI18N

        versionLabel.setFont(versionLabel.getFont().deriveFont(versionLabel.getFont().getStyle() | java.awt.Font.BOLD, versionLabel.getFont().getSize()+2));
        versionLabel.setText("Node ID:");
        versionLabel.setName("versionLabel"); // NOI18N

        //org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(NodeDetailDialog.class);
        //idLabel.setFont(resourceMap.getFont("sensorboardnameLabel.font")); // NOI18N
        idLabel.setText(node.getID()+"");
        idLabel.setName("idLabel"); // NOI18N

        vendorLabel.setFont(vendorLabel.getFont().deriveFont(vendorLabel.getFont().getStyle() | java.awt.Font.BOLD, vendorLabel.getFont().getSize()+2));
        vendorLabel.setText("Vendor:");
        vendorLabel.setName("vendorLabel"); // NOI18N

       // sensorboardnameLabel.setFont(resourceMap.getFont("sensorboardnameLabel.font")); // NOI18N
       // sensorboardnameLabel.setText(node.getInode().getSensorBoardName());
        sensorboardnameLabel.setName("sensorboardnameLabel"); // NOI18N

        homepageLabel.setFont(homepageLabel.getFont().deriveFont(homepageLabel.getFont().getStyle() | java.awt.Font.BOLD, homepageLabel.getFont().getSize()+2));
        homepageLabel.setText("Groups Membership:");
        homepageLabel.setName("homepageLabel"); // NOI18N

       // groupsLabel.setFont(resourceMap.getFont("sensorboardnameLabel.font")); // NOI18N
        groupsLabel.setText(getGroupsString());
        groupsLabel.setName("groupsLabel"); // NOI18N

        imageLabel.setIcon(node.getIcon());
        imageLabel.setName("imageLabel"); // NOI18N

      //  sensorsLabe.setFont(resourceMap.getFont("sensorboardnameLabel.font")); // NOI18N
        sensorsLabe.setText(getSensorsString());
        sensorsLabe.setName("sensorsLabe"); // NOI18N

        homepageLabel1.setFont(homepageLabel1.getFont().deriveFont(homepageLabel1.getFont().getStyle() | java.awt.Font.BOLD, homepageLabel1.getFont().getSize()+2));
        homepageLabel1.setText("Sensors:");
        homepageLabel1.setName("homepageLabel1"); // NOI18N

        homepageLabel2.setFont(homepageLabel2.getFont().deriveFont(homepageLabel2.getFont().getStyle() | java.awt.Font.BOLD, homepageLabel2.getFont().getSize()+2));
        homepageLabel2.setText("Functions:");
        homepageLabel2.setName("homepageLabel2"); // NOI18N

     //   functionsLabel.setFont(resourceMap.getFont("functionsLabel.font")); // NOI18N
        functionsLabel.setText(getFunctionsString());
        functionsLabel.setName("functionsLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(titleLabel)
                                .addGap(18, 18, 18)
                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(versionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(vendorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(homepageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(homepageLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(homepageLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(sensorboardnameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(groupsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sensorsLabe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(functionsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(closeButton)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLabel))
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(versionLabel)
                    .addComponent(idLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorLabel)
                    .addComponent(sensorboardnameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homepageLabel)
                    .addComponent(groupsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homepageLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sensorsLabe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homepageLabel2)
                    .addComponent(functionsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    // End of variables declaration//GEN-END:variables

    /**
	 * @return
	 * @uml.property  name="node"
	 */
    public BMFNodeGUI getNode() {
        return node;
    }

    /**
	 * @param node
	 * @uml.property  name="node"
	 */
    public void setNode(BMFNodeGUI node) {
        this.node = node;
    }
    // End of variables declaration


    public String getGroupsString(){
        String s="";
        if(node.getGroups().size()==0){
            s+="The "+node.getName()+" does not belong to any group!";
        }
        for(int i=0; i<node.getGroups().size(); i++){
            if(i==node.getGroups().size()-1){
                s+=node.getGroups().get(i).getName()+".";
            }else s+=node.getGroups().get(i).getName()+", ";
        }
        return s;
    }
    public String getSensorsString(){
        String s="";
        if(node.getSensors().size()==0){
            s+="The "+node.getName()+" does not have any installed!";
        }
        for(int i=0; i<node.getSensors().size(); i++){
            if(i==node.getSensors().size()-1){
                s+=node.getSensors().get(i).getName()+".";
            }else s+=node.getSensors().get(i).getName()+", ";
        }
        return s;
    }

    public String getFunctionsString(){
        String s="";
        if(node.getFunctions().size()==0){
            s+="The "+node.getName()+" does not have any function installed!";
        }
        for(int i=0; i<node.getFunctions().size(); i++){
            if(i==node.getFunctions().size()-1){
                s+=node.getFunctions().get(i).getName()+".";
            }else s+=node.getFunctions().get(i).getName()+", ";
        }
        return s;
    }
}
