/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewNodeDialog.java
 *
 * Created on 24-feb-2010, 14.49.56
 */

package simpleConfigurationPanel;

import ie.ucd.clarity.bmf.network.manager.BMFGroup;
import ie.ucd.clarity.bmf.network.manager.BMFNode;
//import bmf.common.BMFNodeUtils;
import ie.ucd.clarity.bmf.common.Constants;
import ie.ucd.clarity.bmf.communication.MembershipPacket;
import java.io.IOException;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.imageio.ImageIO;

/**
 *
 * @author Antonio
 */
public class ManageNodeDialog extends javax.swing.JDialog {

    /** Creates new form NewNodeDialog */
    public ManageNodeDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        savingChoice = new javax.swing.ButtonGroup();
        nodeJLabel = new javax.swing.JLabel();
        NodeInformationJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nodeGroupsJList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        groupsJList = new javax.swing.JList();
        NodeInformationJLabel1 = new javax.swing.JLabel();
        rightJButton = new javax.swing.JButton();
        leftJButton1 = new javax.swing.JButton();
        OKJButton1 = new javax.swing.JButton();
        cancelJButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Node");
        setAlwaysOnTop(true);

        nodeJLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        nodeJLabel.setText("Manage Node Groups - ");

        NodeInformationJLabel.setText("ALL GROUPS");

        nodeGroupsJList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Ambiental Light", "Light State", "Presence Detector" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        nodeGroupsJList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(nodeGroupsJList);

        groupsJList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Ambiental Light", "Light State", "Presence Detector" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        groupsJList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane2.setViewportView(groupsJList);

        NodeInformationJLabel1.setText("NODE GROUPS");

        rightJButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        rightJButton.setIcon(getRightIcon());
        rightJButton.setText("");
        rightJButton.setToolTipText("Add Group");
        rightJButton.setBorder(null);
        rightJButton.setBorderPainted(false);
        rightJButton.setContentAreaFilled(false);
        rightJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rightJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightJButtonActionPerformed(evt);
            }
        });

        leftJButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        leftJButton1.setIcon(getLeftIcon());
        leftJButton1.setText("");
        leftJButton1.setToolTipText("Delete Group");
        leftJButton1.setBorder(null);
        leftJButton1.setBorderPainted(false);
        leftJButton1.setContentAreaFilled(false);
        leftJButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        leftJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftJButton1ActionPerformed(evt);
            }
        });

        OKJButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        OKJButton1.setIcon((new GetIcon()).getOKIcon());
        OKJButton1.setText("");
        OKJButton1.setToolTipText("OK");
        OKJButton1.setBorder(null);
        OKJButton1.setBorderPainted(false);
        OKJButton1.setContentAreaFilled(false);
        OKJButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OKJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKJButton1ActionPerformed(evt);
            }
        });

        cancelJButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        cancelJButton1.setIcon((new GetIcon()).getCancelIcon());
        cancelJButton1.setText("");
        cancelJButton1.setToolTipText("CANCEL");
        cancelJButton1.setBorder(null);
        cancelJButton1.setBorderPainted(false);
        cancelJButton1.setContentAreaFilled(false);
        cancelJButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nodeJLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NodeInformationJLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rightJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(leftJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NodeInformationJLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(cancelJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(OKJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nodeJLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NodeInformationJLabel)
                    .addComponent(NodeInformationJLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rightJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(leftJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OKJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rightJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightJButtonActionPerformed

        Object[] selectedObj = groupsJList.getSelectedValues();
        for(int i=0; i<selectedObj.length; i++){
            BMFGroup iGroup = (BMFGroup)selectedObj[i];
            if(! this.currSelection.contains(iGroup)){
                this.currSelection.addElement(iGroup);
                this.updateCurrSelection();
            }
        }
}//GEN-LAST:event_rightJButtonActionPerformed

    private void leftJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftJButton1ActionPerformed

        Object[] selectedObj = nodeGroupsJList.getSelectedValues();
        for(int i=0; i<selectedObj.length; i++){
            BMFGroup iGroup = (BMFGroup)selectedObj[i];
            if(this.currSelection.contains(iGroup)){
                this.currSelection.removeElement(iGroup);
                this.updateCurrSelection();
            }
        }

}//GEN-LAST:event_leftJButton1ActionPerformed

    private void OKJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKJButton1ActionPerformed
        // in currSelection there are the groups to update


        MembershipPacket memb = new MembershipPacket();

        int membershipType;
        if(this.currSelection.size() == 0) membershipType = Constants.MEMBERSHIP_TYPE_RESET;
        else membershipType = Constants.MEMBERSHIP_TYPE_UPDATE;

        memb.setDestinationNode(node.getNodeID());
        memb.setMembershipType(membershipType);

        BMFGroup[] bmfg = new BMFGroup[this.currSelection.size()];

        for(int i=0; i<this.currSelection.size(); i++){
            bmfg[i] = this.currSelection.elementAt(i);
        }

        int[] groupIDs = new int[bmfg.length];
        for(int i=0;i<bmfg.length;i++) {
            groupIDs[i] = bmfg[i].getGroupID();
        }

        memb.setGroupIDs(groupIDs);
        try {
			dad.manager.sendPacket(memb);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

        dad.updateNodeMemberships(true, ""+node.getNodeID(),
                membershipType,
                bmfg); 


        this.dispose();
        
}//GEN-LAST:event_OKJButton1ActionPerformed

    private void cancelJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButton1ActionPerformed
        this.dispose();
}//GEN-LAST:event_cancelJButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageNodeDialog dialog = new ManageNodeDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NodeInformationJLabel;
    private javax.swing.JLabel NodeInformationJLabel1;
    private javax.swing.JButton OKJButton1;
    private javax.swing.JButton cancelJButton1;
    private javax.swing.JList groupsJList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton leftJButton1;
    private javax.swing.JList nodeGroupsJList;
    private javax.swing.JLabel nodeJLabel;
    private javax.swing.JButton rightJButton;
    private javax.swing.ButtonGroup savingChoice;
    // End of variables declaration//GEN-END:variables

    GUIFrame dad;
    BMFNode node;
    Vector<BMFGroup> currSelection;

    public void setNodeAndDadAndPopulate(BMFNode node, GUIFrame dad){
        this.node = node;
        this.dad = dad;
        nodeJLabel.setText(nodeJLabel.getText() + node);
        currSelection = (Vector<BMFGroup>)node.getGroups().clone();
        populateJLists();
    }

    private void populateJLists(){
        this.groupsJList.setListData(dad.BMFGroupVector);
        this.nodeGroupsJList.setListData(currSelection);
    }

    private void updateCurrSelection(){
        this.nodeGroupsJList.removeAll();
        this.nodeGroupsJList.setListData(currSelection);
    }

    private ImageIcon getLeftIcon(){
        try {

            return new ImageIcon((ImageIO.read(this.getClass().getResource("/bmf/images/Left.png"))).getScaledInstance(30, 30, java.awt.Image.SCALE_SMOOTH));
            //ImageIcon newIcon = new ImageIcon(newimg);

        } catch (IOException ex) {
            ex.printStackTrace();

        }
        return null;
    }

    private ImageIcon getRightIcon(){
        try {

            return new ImageIcon((ImageIO.read(this.getClass().getResource("/bmf/images/Right.png"))).getScaledInstance(30, 30, java.awt.Image.SCALE_SMOOTH));
            //ImageIcon newIcon = new ImageIcon(newimg);

        } catch (IOException ex) {
            ex.printStackTrace();

        }
        return null;
    }

}
