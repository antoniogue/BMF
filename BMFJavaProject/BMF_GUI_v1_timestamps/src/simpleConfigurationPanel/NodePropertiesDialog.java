/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewNodeDialog.java
 *
 * Created on 24-feb-2010, 14.49.56
 */

package simpleConfigurationPanel;

import ie.ucd.clarity.bmf.common.CodeConversion;
import ie.ucd.clarity.bmf.common.Constants;
import ie.ucd.clarity.bmf.network.manager.*;
//import ie.ucd.clarity.bmf.network.manager.BMFNode;
//import bmf.common.BMFNodeUtils;
import java.util.Vector;

/**
 *
 * @author Antonio
 */
public class NodePropertiesDialog extends javax.swing.JDialog {

    /** Creates new form NewNodeDialog */
    public NodePropertiesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nodeJLabel = new javax.swing.JLabel();
        NodeInformationJLabel = new javax.swing.JLabel();
        NodeGroupsJLabel = new javax.swing.JLabel();
        imageJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nodeInformationJTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        nodeGroupsJTextArea = new javax.swing.JTextArea();
        OKJButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("NODE PROPERTIES");
        setAlwaysOnTop(true);

        nodeJLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        nodeJLabel.setText("NODE");

        NodeInformationJLabel.setText("NODE INFORMATION");

        NodeGroupsJLabel.setText("NODE GROUPS");

        imageJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bmf/images/telosb.gif"))); // NOI18N

        nodeInformationJTextArea.setColumns(20);
        nodeInformationJTextArea.setEditable(false);
        nodeInformationJTextArea.setRows(5);
        jScrollPane1.setViewportView(nodeInformationJTextArea);

        nodeGroupsJTextArea.setColumns(20);
        nodeGroupsJTextArea.setEditable(false);
        nodeGroupsJTextArea.setRows(5);
        jScrollPane2.setViewportView(nodeGroupsJTextArea);

        OKJButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        OKJButton1.setIcon((new GetIcon()).getOKIcon());
        OKJButton1.setText("");
        OKJButton1.setToolTipText("OK");
        OKJButton1.setBorder(null);
        OKJButton1.setBorderPainted(false);
        OKJButton1.setContentAreaFilled(false);
        OKJButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OKJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nodeJLabel)
                    .addComponent(NodeInformationJLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(NodeGroupsJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(imageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OKJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nodeJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NodeInformationJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NodeGroupsJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OKJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKJButton1ActionPerformed
        this.dispose();
}//GEN-LAST:event_OKJButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NodePropertiesDialog dialog = new NodePropertiesDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NodeGroupsJLabel;
    private javax.swing.JLabel NodeInformationJLabel;
    private javax.swing.JButton OKJButton1;
    private javax.swing.JLabel imageJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea nodeGroupsJTextArea;
    private javax.swing.JTextArea nodeInformationJTextArea;
    private javax.swing.JLabel nodeJLabel;
    // End of variables declaration//GEN-END:variables

    private BMFNode node;

    public void setAndShowNode(BMFNode node){
        this.node = node;
        populateFields();
    }

    private void populateFields(){
        nodeInformationJTextArea.setText(CodeConversion.getTxtSensorboardInformation(node));
        String groups="";
        Vector<IBMFGroup> vg = node.getGroups();
        for(int i=0; i<vg.size(); i++){
            groups += ((BMFGroup)vg.elementAt(i)).getName() + "(" + ((BMFGroup)vg.elementAt(i)).getGroupID() + ")\n";
        }
        nodeGroupsJTextArea.setText(groups);
        imageJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(getImagePath(node)))); // NOI18N
        nodeJLabel.setText(node.toString());
    }
    
    public static String getImagePath(int sensorBoardID){
        switch(sensorBoardID){
            case Constants.SENSORBOARD_TYPE_NO_SENSORBOARD: return "";
            case Constants.SENSORBOARD_TYPE_SBT80_TELOSB:
            case Constants.SENSORBOARD_TYPE_STD_TELOSB:
                return IMG_TELOSB_PATH;
            case Constants.SENSORBOARD_TYPE_TYNSENSORBRD:
                return IMG_TYNDALL25_PATH;
            case Constants.SENSORBOARD_TYPE_BLACKPLUG:
            case Constants.SENSORBOARD_TYPE_ACMEX2:
                return IMG_EPIC_PATH;
            default: return "";
        }
    }

    public static String getImagePath(BMFNode node){
        return getImagePath(node.getSensorBoard());
    }
    
    static final public String IMG_TELOSB_PATH = "/bmf/images/telosb.gif";
    static final public String IMG_EPIC_PATH = "/bmf/images/ACme.jpg";
    static final public String IMG_TYNDALL25_PATH = "/bmf/images/tyndall.jpg";

}
