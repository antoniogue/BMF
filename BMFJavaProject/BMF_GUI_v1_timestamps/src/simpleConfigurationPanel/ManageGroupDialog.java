/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewNodeDialog.java
 *
 * Created on 24-feb-2010, 14.49.56
 */

package simpleConfigurationPanel;

import ie.ucd.clarity.bmf.network.manager.BMFGroup;
import ie.ucd.clarity.bmf.network.manager.BMFNode;
import ie.ucd.clarity.bmf.common.Constants;
import ie.ucd.clarity.bmf.communication.MembershipPacket;
import java.io.IOException;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author Antonio
 */
public class ManageGroupDialog extends javax.swing.JDialog {

    /** Creates new form NewNodeDialog */
    public ManageGroupDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        savingChoice = new javax.swing.ButtonGroup();
        manageGroupJLabel = new javax.swing.JLabel();
        NodeInformationJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nodeInTheGroupJList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        nodesJList = new javax.swing.JList();
        NodeInformationJLabel1 = new javax.swing.JLabel();
        rightJButton = new javax.swing.JButton();
        leftJButton1 = new javax.swing.JButton();
        OKJButton1 = new javax.swing.JButton();
        cancelJButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Group");
        setAlwaysOnTop(true);

        manageGroupJLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        manageGroupJLabel.setText("Manage Group - Group ");

        NodeInformationJLabel.setText("ALL NODES");

        nodeInTheGroupJList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Node 1", "Node 2", "Node 3", "Node 4", "Node 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        nodeInTheGroupJList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(nodeInTheGroupJList);

        nodesJList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Node 1", "Node 2", "Node 3", "Node 4", "Node 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        nodesJList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane2.setViewportView(nodesJList);

        NodeInformationJLabel1.setText("NODES IN THE GROUPS");

        rightJButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        rightJButton.setIcon(getRightIcon());
        rightJButton.setText("");
        rightJButton.setToolTipText("Add Node");
        rightJButton.setBorder(null);
        rightJButton.setBorderPainted(false);
        rightJButton.setContentAreaFilled(false);
        rightJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rightJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightJButtonActionPerformed(evt);
            }
        });

        leftJButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        leftJButton1.setIcon(getLeftIcon());
        leftJButton1.setText("");
        leftJButton1.setToolTipText("Delete Node");
        leftJButton1.setBorder(null);
        leftJButton1.setBorderPainted(false);
        leftJButton1.setContentAreaFilled(false);
        leftJButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        leftJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftJButton1ActionPerformed(evt);
            }
        });

        OKJButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        OKJButton1.setIcon((new GetIcon()).getOKIcon());
        OKJButton1.setText("");
        OKJButton1.setToolTipText("OK");
        OKJButton1.setBorder(null);
        OKJButton1.setBorderPainted(false);
        OKJButton1.setContentAreaFilled(false);
        OKJButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OKJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKJButton1ActionPerformed(evt);
            }
        });

        cancelJButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        cancelJButton1.setIcon((new GetIcon()).getCancelIcon());
        cancelJButton1.setText("");
        cancelJButton1.setToolTipText("CANCEL");
        cancelJButton1.setBorder(null);
        cancelJButton1.setBorderPainted(false);
        cancelJButton1.setContentAreaFilled(false);
        cancelJButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manageGroupJLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NodeInformationJLabel))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rightJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(leftJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NodeInformationJLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(307, Short.MAX_VALUE)
                .addComponent(cancelJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OKJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manageGroupJLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NodeInformationJLabel)
                    .addComponent(NodeInformationJLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OKJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(rightJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(leftJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rightJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightJButtonActionPerformed
        Object[] selectedObj = nodesJList.getSelectedValues();
        for(int i=0; i<selectedObj.length; i++){
            BMFNode iNode = (BMFNode)selectedObj[i];
            if(! this.currSelection.contains(iNode)){
                this.currSelection.addElement(iNode);
            }
        }
        this.updateCurrSelection();
}//GEN-LAST:event_rightJButtonActionPerformed

    private void leftJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftJButton1ActionPerformed
        Object[] selectedObj = nodeInTheGroupJList.getSelectedValues();
        for(int i=0; i<selectedObj.length; i++){
            BMFNode iNode = (BMFNode)selectedObj[i];
            if(this.currSelection.contains(iNode)){
                this.currSelection.removeElement(iNode);
                this.updateCurrSelection();
            }
        }
    }//GEN-LAST:event_leftJButton1ActionPerformed

    private void OKJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKJButton1ActionPerformed
        
        Vector<BMFNode> nodesToAdd = new Vector();
        Vector<BMFNode> nodesToDelete = new Vector();
        Vector<MembershipPacket> membs = new Vector();

        
        boolean isDeleting = false;
        boolean isAdding = false;

        // Nodes in currSelection MINUS group.getNodes() are nodes to add to the group,
        // Nodes in group.getNodes() MINUS currSelection are nodes to delete from the group.
        for(int i=0; i<currSelection.size(); i++){
            if(group.getNodes().contains(currSelection.elementAt(i)));
            else{
                MembershipPacket mp = new MembershipPacket();

                mp.setDestinationNode(currSelection.elementAt(i).getNodeID());
                mp.setMembershipType(Constants.MEMBERSHIP_TYPE_ADD);
                mp.setGroupID(group.getGroupID());

                membs.addElement(mp);
                
                isAdding = true;
                
                //nodesToAdd.addElement(currSelection.elementAt(i));
                //dad.print("ADD "+currSelection.elementAt(i));
            }
        }

        for(int i=0; i<group.getNodes().size(); i++){
            if(currSelection.contains(group.getNodes().elementAt(i)));
            else{
                
                MembershipPacket mp = new MembershipPacket();

                mp.setDestinationNode(group.getNodes().elementAt(i).getNodeID());
                mp.setMembershipType(Constants.MEMBERSHIP_TYPE_DELETE);
                mp.setGroupID(group.getGroupID());
                
                membs.addElement(mp);
                
                isDeleting = false;
                
                //nodesToDelete.addElement(group.getNodes().elementAt(i));
                //dad.print("DELETE "+group.getNodes().elementAt(i));
            }
        }

        String what;
        if(isAdding && isDeleting) what="GROUP UPDATE - ADD and DELETE";
        else if(isAdding) what="GROUP UPDATE - ADD";
        else what="GROUP UPDATE - DELETE";
        
        dad.storeTimestamp(System.currentTimeMillis(), 0, what, -1, -1, -1);
        new GroupUpdaterThread(group, membs, dad).start();
 
        this.dispose();
    }//GEN-LAST:event_OKJButton1ActionPerformed

    private void cancelJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButton1ActionPerformed
        this.dispose();
}//GEN-LAST:event_cancelJButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageGroupDialog dialog = new ManageGroupDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NodeInformationJLabel;
    private javax.swing.JLabel NodeInformationJLabel1;
    private javax.swing.JButton OKJButton1;
    private javax.swing.JButton cancelJButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton leftJButton1;
    private javax.swing.JLabel manageGroupJLabel;
    private javax.swing.JList nodeInTheGroupJList;
    private javax.swing.JList nodesJList;
    private javax.swing.JButton rightJButton;
    private javax.swing.ButtonGroup savingChoice;
    // End of variables declaration//GEN-END:variables

    Vector<BMFNode> currSelection;
    BMFGroup group;
    GUIFrame dad;

    void setGroupAndDadAndPopulate(BMFGroup group, GUIFrame dad) {
        this.group = group;
        this.dad = dad;
        currSelection = new Vector();
        manageGroupJLabel.setText(manageGroupJLabel.getText() + group + " (id "+ group.getGroupID()+ ")");
        currSelection = (Vector<BMFNode>)group.getNodes().clone();
        populateJLists();
    }

    private void populateJLists(){
        this.nodesJList.setListData(dad.BMFNodeVector);
        this.nodeInTheGroupJList.setListData(currSelection);
    }

    private void updateCurrSelection() {
        this.nodeInTheGroupJList.removeAll();
        this.nodeInTheGroupJList.setListData(currSelection);
    }

    private ImageIcon getLeftIcon(){
        try {

            return new ImageIcon((ImageIO.read(this.getClass().getResource("/bmf/images/Left.png"))).getScaledInstance(30, 30, java.awt.Image.SCALE_SMOOTH));
            //ImageIcon newIcon = new ImageIcon(newimg);

        } catch (IOException ex) {
            ex.printStackTrace();

        }
        return null;
    }

    private ImageIcon getRightIcon(){
        try {

            return new ImageIcon((ImageIO.read(this.getClass().getResource("/bmf/images/Right.png"))).getScaledInstance(30, 30, java.awt.Image.SCALE_SMOOTH));
            //ImageIcon newIcon = new ImageIcon(newimg);

        } catch (IOException ex) {
            ex.printStackTrace();

        }
        return null;
    }






}
